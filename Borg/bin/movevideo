#!/usr/bin/env ruby
#
#  Created by Paul McKibbin on 2006-11-05.
#  Updated by Paul McKibbin at 2010-12-27.
#  Copyright (c) 2006-2010. All rights reserved.
LOG_DIR='/var/log/borg'
LOG_FILE='movevideo.log'
COMPLETED_DIR='/vault/tv3/filing'
DESTINATION="/vault/tv3"
require 'rubygems'
require "logger"
require 'fileutils'
$:.unshift(File.join(File.dirname(__FILE__),'..','lib','config'))
require 'Config'
require 'Filename'

def create_directory(series_dirname)
  unless File.exists?(series_dirname)
    puts("Creating series directory #{series_dirname}.")
    FileUtils.mkdir_p(series_dirname)
    true
  else
    puts("Series directory #{series_dirname} already exists.")
    false
  end
end

def move_file(source,destination)
  unless File.exists?(destination)
    puts("Moving #{source} to #{destination}.")
    FileUtils.mv(filename,destination)
  else
    puts("#{destination} already exists. Not moving #{source}.")
  end
end

begin
  FileUtils.mkdir_p(LOG_DIR) unless File.exists?(LOG_DIR)
  logfile=File.join(LOG_DIR,LOG_FILE)
  Log=Logger.new(logfile, shift_age='weekly')
rescue => e
  Log=Logger.new(STDOUT)
  Log.error {e.message + ". Logging to stdout."}
end
Log.info {"#{$0} starting."}

if ARGV.empty?
  Log.error {"No files specified. Exiting."}
else
  filename=ARGV[0].chomp
  filename=File.join(COMPLETED_DIR,filename) unless File.exists?(filename)
  if File.exists?(filename) then
    Log.info {"Analysing #{filename}."}
    test=Filename::normalize(filename,true)
    prefix,series_name,season,episode,title=Filename::location(test)
    unless prefix.nil?
      destination_directory=File.join(DESTINATION,prefix,series_name)
      location=episode.nil? ? destination_directory : File.join(destination_directory,"Season#{season}")
      create_directory(location)
      move_file(filename,File.join(location,test))
    else
      puts("Unable to determine type for #{filename}.")
    end
  else
    Log.debug {"Unable to find file #{filename}."}
  end unless filename.nil?
end
Log.info {"#{$0} completed."}
