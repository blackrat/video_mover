#!/usr/bin/env ruby
#
#  Created by Paul McKibbin on 2006-11-05.
#  Updated by Paul McKibbin at 2010-12-27.
#  Copyright (c) 2006-2010. All rights reserved.
LOG_DIR='/var/log/borg'
LOG_FILE='movevideo.log'
COMPLETED_DIR='/vault/tv3/filing'
DESTINATION="/vault/tv3"
require 'rubygems'
require "logger"
require 'fileutils'
$:.unshift(File.join(File.dirname(__FILE__),'..','lib')) unless $:.include?(File.join(File.dirname(__FILE__),'..','lib'))
require 'Config'
require 'Filename'
begin
  FileUtils.mkdir_p(LOG_DIR) unless File.exists?(LOG_DIR)
  logfile=File.join(LOG_DIR,LOG_FILE)
  Log=Logger.new(logfile, shift_age='weekly')
rescue => e
  Log=Logger.new(STDOUT)
  Log.error {e.message + ". Logging to stdout."}
end
Log.info {"#{$0} starting."}

if ARGV.empty?
  Log.error {"No files specified. Exiting"}
else
  filename=ARGV[0].chomp
  filename=File.join(COMPLETED_DIR,filename) unless File.exists?(filename)
  if File.exists?(filename) then
    Log.info {"Analysing #{filename}."}
    test=Filename::normalize(filename,true)
    prefix,series_name,season,episode,title=Filename::location(filename)
    FileUtils.mkdir_p("#{DESTINATION}/#{prefix}/#{series_name}") unless File.exist?("#{DESTINATION}/#{prefix}/#{series_name}")
    if episode.nil?
      FileUtils.mv(filename,"#{DESTINATION}/#{prefix}/#{series_name}/#{test}") unless File.exist?("#{DESTINATION}/#{prefix}/#{series_name}/#{test}")
    else
      FileUtils.mkdir_p("#{DESTINATION}/#{prefix}/#{series_name}/Season#{season}") unless File.exist?("#{DESTINATION}/#{prefix}/#{series_name}/Season#{season}")
      FileUtils.mv(filename,"#{DESTINATION}/#{prefix}/#{series_name}/Season#{season}/#{test}") unless File.exist?("#{DESTINATION}/#{prefix}/#{series_name}/Season#{season}/#{test}")
    end
  else
    Log.debug {"Unable to find file #{filename}"}
  end unless filename.nil?
end
Log.info {"#{$0} completed."}
